[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[warn] No sbt.version set in project/build.properties, base directory: C:\Users\GS-3932\Desktop\scalaCose
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.2 (Oracle Corporation Java 18.0.2.1)
[debug]       Load.loadUnit: plugins took 100.0874ms
[debug]       Load.loadUnit: defsScala took 0.6062ms
[debug] [Loading] Scanning directory C:\Users\GS-3932\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\GS-3932\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 31.5192 ms
[debug]           Load.resolveProject(global-plugins) took 85.0516ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\GS-3932\.sbt\1.0\plugins, plugins: List(<none>))) took 180.6198ms
[debug] [Loading] Done in C:\Users\GS-3932\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 245.2545ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3232ms
[debug]     Load.loadUnit(file:/C:/Users/GS-3932/.sbt/1.0/plugins/, ...) took 363.2394ms
[debug]   Load.apply: load took 749.2092ms
[debug]   Load.apply: resolveProjects took 11.9068ms
[debug]   Load.apply: finalTransforms took 121.9276ms
[debug]   Load.apply: config.delegates took 12.1925ms
[debug]   Load.apply: Def.make(settings)... took 673.8472ms
[debug]   Load.apply: structureIndex took 116.3701ms
[debug]   Load.apply: mkStreams took 1.6028ms
[info] loading global plugins from C:\Users\GS-3932\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6389.74ms
[debug]     Load.loadUnit: plugins took 65.2557ms
[debug]     Load.loadUnit: defsScala took 0.006ms
[debug] [Loading] Scanning directory C:\Users\GS-3932\Desktop\scalaCose
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\GS-3932\Desktop\scalaCose, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.1212 ms
[debug]         Load.resolveProject(scalacose) took 3.6102ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalacose, base: C:\Users\GS-3932\Desktop\scalaCose, plugins: List(<none>))) took 7.4847ms
[debug] [Loading] Done in C:\Users\GS-3932\Desktop\scalaCose, returning: (scalacose)
[debug]     Load.loadUnit: loadedProjectsRaw took 10.1923ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0156ms
[debug]   Load.loadUnit(file:/C:/Users/GS-3932/Desktop/scalaCose/, ...) took 76.458ms
[debug] Load.apply: load took 79.3611ms
[debug] Load.apply: resolveProjects took 0.1991ms
[debug] Load.apply: finalTransforms took 15.5192ms
[debug] Load.apply: config.delegates took 0.3365ms
[debug] Load.apply: Def.make(settings)... took 183.0607ms
[debug] Load.apply: structureIndex took 43.8333ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to scalacose (in build file:/C:/Users/GS-3932/Desktop/scalaCose/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-f63bf329ff7d9ddd1bf1
[debug] Writing bsp connection file
[info] started sbt server
